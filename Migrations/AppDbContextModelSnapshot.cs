// <auto-generated />
using System;
using Library.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.2.22472.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<Guid>("AuthorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BooksId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("BookTag", b =>
                {
                    b.Property<Guid>("BooksId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BooksId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("BookTag");
                });

            modelBuilder.Entity("Library.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Library.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<int>("EditionNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("int");

                    b.Property<Guid?>("PublisherId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subtitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TotalPages")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Library.Models.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66efdc74-a929-4bc3-bf57-8e7937253d89"),
                            Name = "Afrikaans"
                        },
                        new
                        {
                            Id = new Guid("169fbfc8-0de8-47fb-b35c-a0d81f7dfc43"),
                            Name = "Arabic"
                        },
                        new
                        {
                            Id = new Guid("d85a7c2a-e59e-456f-8a46-e6b19e2563dc"),
                            Name = "Bengali"
                        },
                        new
                        {
                            Id = new Guid("fc2ff3a6-c04e-416f-b00c-da2a557f288d"),
                            Name = "Bulgarian"
                        },
                        new
                        {
                            Id = new Guid("df4f910c-a42d-4d1c-86f5-3f06bb4ee953"),
                            Name = "Catalan"
                        },
                        new
                        {
                            Id = new Guid("345eb97b-1fe9-464c-9f71-dc3538c4c673"),
                            Name = "Cantonese"
                        },
                        new
                        {
                            Id = new Guid("23d8d8c1-2ac5-4f8c-849e-d79c90a5c64f"),
                            Name = "Croatian"
                        },
                        new
                        {
                            Id = new Guid("2210afea-f3e1-469c-86e4-0384b29b08cc"),
                            Name = "Czech"
                        },
                        new
                        {
                            Id = new Guid("69b4b6fe-fe4f-4f9c-858b-200f4068b939"),
                            Name = "Danish"
                        },
                        new
                        {
                            Id = new Guid("164c00ac-9e32-4ad8-8f82-3fc212559a8e"),
                            Name = "Dutch"
                        },
                        new
                        {
                            Id = new Guid("6ce8d208-1fc0-4957-b5bd-64b0ddef9079"),
                            Name = "Lithuanian"
                        },
                        new
                        {
                            Id = new Guid("a740a2f6-a59a-4e6a-b5e8-eb017328f752"),
                            Name = "Malay"
                        },
                        new
                        {
                            Id = new Guid("5f9c1c5b-d4fe-44b5-a241-1ae6a774745f"),
                            Name = "Malayalam"
                        },
                        new
                        {
                            Id = new Guid("43daad06-35ea-45d6-8fbc-7e6fc55be5db"),
                            Name = "Panjabi"
                        },
                        new
                        {
                            Id = new Guid("c1e633ad-f991-476a-ad8c-7223966f97ab"),
                            Name = "Tamil"
                        },
                        new
                        {
                            Id = new Guid("d7a48efb-3d1d-4beb-8483-9718d50b9e92"),
                            Name = "English"
                        },
                        new
                        {
                            Id = new Guid("bcd66cb0-c198-4001-826d-ca3757ef864d"),
                            Name = "Finnish"
                        },
                        new
                        {
                            Id = new Guid("70cdec22-1d8d-4bf1-8786-8316cd63d4a2"),
                            Name = "French"
                        },
                        new
                        {
                            Id = new Guid("cf087fd5-b0f0-48fb-bcdc-a1293bf7206f"),
                            Name = "German"
                        },
                        new
                        {
                            Id = new Guid("85c660d4-4849-46da-8e6f-d7bb32f97f2b"),
                            Name = "Greek"
                        },
                        new
                        {
                            Id = new Guid("0502be3e-a18f-4f6a-9e00-55e1c72679fc"),
                            Name = "Hebrew"
                        },
                        new
                        {
                            Id = new Guid("1b8d74c2-aa0b-409b-a951-1f081a73cd20"),
                            Name = "Hindi"
                        },
                        new
                        {
                            Id = new Guid("3ee0b0b8-be72-4bc5-81a9-eb3248d9a11f"),
                            Name = "Hungarian"
                        },
                        new
                        {
                            Id = new Guid("4797916d-ead2-48cc-bd7b-a002f0e9c8f2"),
                            Name = "Indonesian"
                        },
                        new
                        {
                            Id = new Guid("f442ba41-ab32-4497-8125-d73053095c13"),
                            Name = "Italian"
                        },
                        new
                        {
                            Id = new Guid("70b4d04f-fcf5-4238-bc13-a2b93a844ecc"),
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = new Guid("09e61944-0b90-43c8-92e3-7515e743f6eb"),
                            Name = "Javanese"
                        },
                        new
                        {
                            Id = new Guid("d28ebf89-130b-47a7-b553-b0430d00aa91"),
                            Name = "Korean"
                        },
                        new
                        {
                            Id = new Guid("59f19552-5af3-4bc6-abe9-1ab874995c6d"),
                            Name = "Norwegian"
                        },
                        new
                        {
                            Id = new Guid("cfd28780-f2e0-405b-a626-8f26a3da0b3a"),
                            Name = "Polish"
                        },
                        new
                        {
                            Id = new Guid("9cc8ac3b-d0a5-48a8-a3a9-2bc0f26e1024"),
                            Name = "Portuguese"
                        },
                        new
                        {
                            Id = new Guid("418da325-e1ba-4d10-97ed-e83843d68ca1"),
                            Name = "Romanian"
                        },
                        new
                        {
                            Id = new Guid("5c16053e-cf93-4980-b6a3-059570e6a585"),
                            Name = "Russian"
                        },
                        new
                        {
                            Id = new Guid("4e60f4c1-8424-48d3-8145-07c12bba08ab"),
                            Name = "Serbian"
                        },
                        new
                        {
                            Id = new Guid("159d1c72-4a39-42e3-b609-7d4fa61823a8"),
                            Name = "Slovak"
                        },
                        new
                        {
                            Id = new Guid("81076d8c-75f2-4698-afe4-3d32c3de2de9"),
                            Name = "Slovene"
                        },
                        new
                        {
                            Id = new Guid("c1cc834f-36de-4ef1-addc-53d25453f897"),
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = new Guid("3946ed87-5cc6-499a-9718-328ec250796d"),
                            Name = "Swedish"
                        },
                        new
                        {
                            Id = new Guid("1e3add34-bf36-4da5-bf40-438aa4b2a529"),
                            Name = "Telugu"
                        },
                        new
                        {
                            Id = new Guid("4a8daea6-d2bc-47c3-a4dc-6afdfe9bf6e9"),
                            Name = "Thai"
                        },
                        new
                        {
                            Id = new Guid("96ae9cee-2366-44c5-8e3b-a64819f82829"),
                            Name = "Turkish"
                        },
                        new
                        {
                            Id = new Guid("583c8e66-a633-4d62-8cf7-943202d592f4"),
                            Name = "Ukrainian"
                        },
                        new
                        {
                            Id = new Guid("cd299394-a791-4fb7-884e-81de530865ad"),
                            Name = "Vietnamese"
                        },
                        new
                        {
                            Id = new Guid("6d16fe9e-b478-4868-be52-a6902bda0d19"),
                            Name = "Welsh"
                        },
                        new
                        {
                            Id = new Guid("2b3b9806-8171-4754-a256-1bee0d62020b"),
                            Name = "Algerian"
                        },
                        new
                        {
                            Id = new Guid("56316071-856b-4c26-8cf5-089dac172734"),
                            Name = "Aramaic"
                        },
                        new
                        {
                            Id = new Guid("841e73b8-7c85-49b0-9a71-8488d8d194b9"),
                            Name = "Armenian"
                        },
                        new
                        {
                            Id = new Guid("2dceb4ba-ea02-41e2-bda3-1e48d885a579"),
                            Name = "Berber"
                        },
                        new
                        {
                            Id = new Guid("bad2e9fb-f0a7-4913-b100-ee19e93e7c39"),
                            Name = "Burmese"
                        },
                        new
                        {
                            Id = new Guid("e22e00f3-8bf2-44e8-918b-4df52907905d"),
                            Name = "Bosnian"
                        },
                        new
                        {
                            Id = new Guid("e3497954-38a0-4520-a97a-49e44cd637f6"),
                            Name = "Brazilian"
                        },
                        new
                        {
                            Id = new Guid("657f752e-c326-44d9-9e63-711694113c59"),
                            Name = "Cypriot"
                        },
                        new
                        {
                            Id = new Guid("0db477f4-cb39-4f8f-9d0a-341185654f31"),
                            Name = "Corsica"
                        },
                        new
                        {
                            Id = new Guid("4bac7ce6-c86c-40fe-bc04-76ed8a4b01b4"),
                            Name = "Creole"
                        },
                        new
                        {
                            Id = new Guid("404ec673-3b41-4967-bf54-404444b57c1a"),
                            Name = "Scottish"
                        },
                        new
                        {
                            Id = new Guid("0ace24cd-facc-4899-a560-87b3ad313425"),
                            Name = "Egyptian"
                        },
                        new
                        {
                            Id = new Guid("54cf006f-1799-4125-8d97-d83dc3b5ec32"),
                            Name = "Esperanto"
                        },
                        new
                        {
                            Id = new Guid("12350841-9256-4c68-a738-57e6427a8f33"),
                            Name = "Estonian"
                        },
                        new
                        {
                            Id = new Guid("51e98920-81cf-4496-a023-0d5ba7efa592"),
                            Name = "Finn"
                        },
                        new
                        {
                            Id = new Guid("cb0a28aa-687d-42fc-9b95-465008dad95b"),
                            Name = "Flemish"
                        },
                        new
                        {
                            Id = new Guid("e95b0f69-1197-4b4a-9c02-93e5b7c1cb85"),
                            Name = "Georgian"
                        },
                        new
                        {
                            Id = new Guid("d4a5689a-8d00-42b3-b051-2997ea3a2de6"),
                            Name = "Hawaiian"
                        },
                        new
                        {
                            Id = new Guid("d9864cff-515f-4fd6-a264-54c545782c8d"),
                            Name = "Inuit"
                        },
                        new
                        {
                            Id = new Guid("19b81293-94d6-403e-a8cf-a7258a163aca"),
                            Name = "Irish"
                        },
                        new
                        {
                            Id = new Guid("0b88c149-85e7-4e00-9a3b-3a88990f26cf"),
                            Name = "Icelandic"
                        },
                        new
                        {
                            Id = new Guid("34cf419d-d1f2-4caf-8f55-2b3e827058db"),
                            Name = "Latin"
                        },
                        new
                        {
                            Id = new Guid("6bbe19ce-bf99-4d14-92eb-89e9a846862b"),
                            Name = "Mandarin"
                        },
                        new
                        {
                            Id = new Guid("e61a7b7f-a2fd-4df6-9fb5-9dacf0743e03"),
                            Name = "Nepalese"
                        },
                        new
                        {
                            Id = new Guid("20231879-989f-4a62-bdbd-26db80da38e0"),
                            Name = "Sanskrit"
                        },
                        new
                        {
                            Id = new Guid("2d153960-45d5-4d5f-9a7c-9cfc32bdfa9a"),
                            Name = "Tagalog"
                        },
                        new
                        {
                            Id = new Guid("3c306cd9-e5b6-437a-a475-68406d4e4323"),
                            Name = "Tahitian"
                        },
                        new
                        {
                            Id = new Guid("dd126987-caea-4f31-b1fc-09af5770a75d"),
                            Name = "Tibetan"
                        },
                        new
                        {
                            Id = new Guid("6354f687-4f3f-45a4-ba9a-88574e6c8974"),
                            Name = "Gypsy"
                        },
                        new
                        {
                            Id = new Guid("8503b30a-876f-4306-99f3-b077466dacee"),
                            Name = "Wu"
                        });
                });

            modelBuilder.Entity("Library.Models.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("Library.Models.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<HierarchyId>("HierarchyLevel")
                        .IsRequired()
                        .HasColumnType("hierarchyid");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PageNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Library.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("Library.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookTag", b =>
                {
                    b.HasOne("Library.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Library.Models.Book", b =>
                {
                    b.HasOne("Library.Models.Language", "Language")
                        .WithMany("Books")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Library.Models.Section", b =>
                {
                    b.HasOne("Library.Models.Book", "Book")
                        .WithMany("Sections")
                        .HasForeignKey("BookId");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Library.Models.Book", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("Library.Models.Language", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
